// 1. Create a collection named orders.
db.createCollection('orders')

//2. Insert at least 3 documents that represent an order.
//Order dates should be: 2017-02-03, 2017-04-04, 2017-01-02
db.orders.insert({orderDate: new Date('2017-02-03'), orderTotal: 120, lineItems: ['12.50', 5, 'Widgets']})
db.orders.insert({orderDate: new Date('2017-04-04'), orderTotal: 95, lineItems: ['10.99', 12, 'Do Dads']})
db.orders.insert({orderDate: new Date('2017-01-02'), orderTotal: 85, lineItems: ['13.95', 10, 'Whatchamacall its']})
db.orders.insert({orderDate: new Date('2016-12-20'), orderTotal: 105, lineItems: ['11.50', 15, 'Thingamabobs']})

// 3. Find all orders and make them look pretty.
db.orders.find().pretty()

// 4. Find all orders with an orderDate that is after 1/31/2017.
db.orders.find({orderDate: {$gt: new Date('2017-01-31')}})

// 5. Change the orderTotal from 2/3/2017 to 63 dollars
// (you do NOT have to ensure the lineItems' unitPrice * quantity add up to the orderTotal)
db.orders.update({orderDate: new Date('2017-02-03')},{$set:{orderTotal: 63}})

// 6. Add another lineItem to the order from 4/4/2017
db.orders.update({orderDate: new Date('2017-04-04')},{$set:{lineItems2: ['9.99', 12, 'Do Hickeys']}})

// 7. Change the first lineItem in the order from 1/2/2017 to be for 2 'transistor radio's
db.orders.update({orderDate: new Date('2017-01-02')},{$set:{'lineItems.1': 2}})
db.orders.update({orderDate: new Date('2017-01-02')},{$set:{'lineItems.2': 'transistor radios'}})

// 8. Find orders with lineItems that have a quantity that is less than 10, but greater than 2.
// You will have to research $and order fields
db.orders.find( {$and: [ {'lineItems.1': {$lt: 10}}, {'lineItems.1': {$gt: 2}} ] })
